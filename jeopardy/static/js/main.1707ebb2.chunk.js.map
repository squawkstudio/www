{"version":3,"sources":["components/LoadingComponent.js","components/FilterBarComponent.js","components/LoadMoreComponent.js","shared/helper.js","components/SearchComponent.js","components/PlayComponent.js","components/HeaderComponent.js","components/FooterComponent.js","shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/reducers.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","msg","className","FilterBar","props","startDateChanged","date","setHours","setMinutes","setSeconds","setState","searchEnabled","startDate","endDateChanged","endDate","searchClicked","fetchQAs","state","offset","catToggled","bind","valToggled","catSelected","valSelected","catDropdownOpen","valDropdownOpen","this","prevState","e","t","currentTarget","innerText","f","catId","catTitle2IdMap","get","getText","catTitle","value","parseInt","qas","appProps","fqas","data","filter","qa","category","id","airdate","Map","map","title","catItems","Array","from","entries","sort","a","b","cat","DropdownItem","key","onClick","valItems","val","console","log","Dropdown","isOpen","toggle","DropdownToggle","caret","color","DropdownMenu","divider","popperPlacement","placeholderText","maxDate","Date","isClearable","selected","onChange","minDate","Button","disabled","length","React","Component","LoadMore","clicked","preventDefault","isLoading","getFormattedDate","year","getFullYear","getMonth","toString","padStart","getDate","RenderQAItem","useState","isPopOpen","setPopOpen","onClickOutside","content","position","targetRect","popoverRect","arrowColor","arrowSize","arrowStyle","opacity","answer","Card","CardHeader","CardBody","question","Search","count","errMess","selectedCatId","selectedVal","selectedStartDate","selectedEndDate","catValQas","results","qaItems","Math","min","max","CategoryBar","cats","Play","catQAs","r","c","i","push","Header","toggleNav","isNavOpen","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","src","alt","Collapse","navbar","Nav","NavItem","to","Footer","serviceUrl","fetchCatQAs","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","addCatQAs","catch","qasFailed","qasLoading","type","payload","errmess","addQAs","q","catLoading","addCats","Main","fetchCats","location","TransitionGroup","CSSTransition","classNames","timeout","exact","path","render","withRouter","connect","url","random","n","clues_count","slice","QAs","action","oldQs","newQs","concat","Cats","CatQAs","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1707ebb2.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = ({msg}) => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading {msg}. . .</p>\n        </div>\n    );\n};","import React from 'react';\nimport { Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css'\n\nclass FilterBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.catToggled = this.catToggled.bind(this);\n    this.valToggled = this.valToggled.bind(this);\n    this.catSelected = this.catSelected.bind(this);\n    this.valSelected = this.valSelected.bind(this);\n    this.startDateChanged = this.startDateChanged.bind(this);\n    this.endDateChanged = this.endDateChanged.bind(this);\n    this.searchClicked = this.searchClicked.bind(this);\n    this.state = { \n      catDropdownOpen: false, \n      valDropdownOpen: false,\n      searchEnabled: false/*,\n      catId: props.appProps.catId, // thse are important since a new component seems to be created\n      catTitle: props.appProps.catTitle, \n      value: props.appProps.value,\n      startDate: props.appProps.startDate, \n      endDate: props.appProps.endDate*/\n    };\n  }\n\n  catToggled() { \n    this.setState(prevState => ({ catDropdownOpen: !prevState.catDropdownOpen })); \n  }\n  valToggled() { \n    this.setState(prevState => ({ valDropdownOpen: !prevState.valDropdownOpen })); \n  }\n\n  getText(e) {\n    const t = e.currentTarget.innerText;\n    return t === 'Clear' ? null : t; // Clear means reset to search for all\n  }\n\n  catSelected(e, f) { \n    this.setState({\n      searchEnabled: true, \n      catId: this.catTitle2IdMap.get(this.getText(e)),\n      catTitle: this.getText(e)\n    }); \n  }\n\n  valSelected(e) { \n    this.setState({\n      searchEnabled: true, \n      value: (this.getText(e) && parseInt(this.getText(e), 10)) || null \n    }); \n  }\n\n  startDateChanged = date => { \n    if (date) { \n      date.setHours(0); \n      date.setMinutes(0); \n      date.setSeconds(0); \n    }\n    this.setState({ searchEnabled: true, startDate: date }); \n  };\n\n  endDateChanged = date => { \n    if (date) {\n      date.setHours(23);\n      date.setMinutes(59);\n      date.setSeconds(59);\n    }\n    this.setState({ searchEnabled: true, endDate: date }); \n  };\n\n  searchClicked = () => {\n    this.props.fetchQAs({...this.state, offset: 0});\n  };\n\n  render() {\n    const qas = this.props.appProps;\n    const fqas = qas.data.filter((qa) => (\n      (!qas.category || qas.category === qa.category.id) &&\n      (!qas.value || qas.value === qa.value) &&\n      (!qas.startDate || qa.airdate >= qas.startDate) &&\n      (!qas.endDate || qa.airdate <= qas.endDate)\n    ));\n\n    this.catTitle2IdMap = new Map(fqas.map(qa=>[qa.category.title, qa.category.id]));\n    const sortedCategories = Array.from(this.catTitle2IdMap.entries()).sort((a,b)=>(a[0]>b[0]?1:-1));\n    const catItems = sortedCategories.map((cat) => (\n        <DropdownItem key={cat[0]} onClick={this.catSelected}>{cat[0]}</DropdownItem>\n    ));\n\n    const values = [100,200,400,800,1000];\n    const valItems = values.map((val) => (\n        <DropdownItem key={val} onClick={this.valSelected}>{val}</DropdownItem>\n    ));\n\n    console.log('filterBar render:', this.state);\n    return (\n      <div className='filterBar row'>\n        <Dropdown isOpen={this.state.catDropdownOpen} toggle={this.catToggled}>\n          <DropdownToggle className='filterBtn' caret color='primary'> Category {this.state.catTitle}</DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem key='clear' onClick={this.catSelected}>Clear</DropdownItem>\n            <DropdownItem divider />\n            {catItems}\n          </DropdownMenu>\n        </Dropdown>\n        <Dropdown isOpen={this.state.valDropdownOpen} toggle={this.valToggled}>\n          <DropdownToggle className='filterBtn' caret color='primary'> Value {this.state.value||''}</DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem key='clear' onClick={this.valSelected}>Clear</DropdownItem>\n            <DropdownItem divider />\n            {valItems}\n          </DropdownMenu>\n        </Dropdown>\n        <div className='dateRangePicker'>\n          <DatePicker className='filterBtn startDatePicker' popperPlacement='top' placeholderText='Start air date'\n            maxDate={this.state.endDate?this.state.endDate:new Date()} isClearable selected={this.state.startDate} \n            onChange={this.startDateChanged}/>\n          <DatePicker className='filterBtn endDatePicker' popperPlacement='top' placeholderText='End air date'\n            minDate={this.state.startDate?this.state.startDate:null} maxDate={new Date()} isClearable selected={this.state.endDate} \n            onChange={this.endDateChanged}/>\n        </div>\n        <Button className='filterBtn searchBtn' color='primary' disabled={!this.state.searchEnabled} onClick={this.searchClicked}>Search</Button>\n        <div className='cardTotal'>{fqas.length} Question</div>\n      </div>\n    );\n  }\n}\n\nexport default FilterBar;","import React from 'react';\nimport { Button } from 'reactstrap';\n\nclass LoadMore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.clicked = this.clicked.bind(this);\n  }\n\n  clicked(e) {\n    e.preventDefault();\n    const f = {...this.props.appProps};\n    f.offset = f.offset ? f.offset+100 : 100;\n    this.props.fetchQAs(f);\n  }\n\n  render() {\n    return (\n      <Button className=\"moreButton\" onClick={this.clicked} disabled={this.props.appProps.isLoading} >\n        {this.props.appProps.isLoading ? \"Loading...\" : \"More...\" }\n      </Button>\n    );\n  }\n}\n\nexport default LoadMore;\n","export const getFormattedDate = date => {\n    const year = date.getFullYear();\n    const month = (1 + date.getMonth()).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return month + '/' + day + '/' + year;\n};","import React, { useState } from 'react';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport FilterBar from './FilterBarComponent';\nimport LoadMore from './LoadMoreComponent';\nimport Popover, { ArrowContainer } from 'react-tiny-popover';\nimport { getFormattedDate } from '../shared/helper';\n\nconst RenderQAItem = ({qa}) => {\n    const [isPopOpen, setPopOpen] = useState(false);\n    return (\n        <Popover isOpen={isPopOpen}\n            onClickOutside={() => { setPopOpen(false); }}\n            content={({ position, targetRect, popoverRect }) => (\n                    <ArrowContainer \n                        position={position}\n                        targetRect={targetRect}\n                        popoverRect={popoverRect}\n                        arrowColor={'white'}\n                        arrowSize={10}\n                        arrowStyle={{ opacity: 0.7 }}\n                    >\n                        <dl className='detailPopover row '>\n                            <dt className=\"col-3\">Answer:</dt>\n                            <dd className=\"col-9\"><b>{qa.answer}</b></dd>\n                            <dt className=\"col-3\">Value:</dt>\n                            <dd className=\"col-9\"><b>{qa.value}</b></dd>\n                            <dt className=\"col-3\">Aired:</dt>\n                            <dd className=\"col-9\"><b>{getFormattedDate(qa.airdate)}</b></dd>\n                        </dl>\n                    </ArrowContainer>\n                )}\n         >\n            <Card className=\"questionCard\" onClick={() => { setPopOpen(!isPopOpen); }}>\n                <CardHeader className=\"questionCategory\">{qa.category.title}</CardHeader>\n                <CardBody className=\"question\">{qa.question}</CardBody>\n            </Card>\n        </Popover>\n)};\n\nclass Search extends React.Component {\n    constructor(props) {\n      super(props);\n      console.count(\"Search constructor\");\n    }\n\n    render () {\n        const qas = this.props.appProps.qas;\n        if (qas.isLoading && !qas.data)\n            return(<div className=\"row\"><Loading /> </div>);\n\n        if (qas.errMess)\n            return(<div className=\"col-12\"> <h4>{qas.errMess}</h4> </div>);\n\n        const selectedCatId = qas.category;\n        const selectedVal = qas.value;\n        const selectedStartDate = qas.startDate;\n        const selectedEndDate = qas.endDate;\n        const catValQas = qas.data.filter((qa) => (\n            (!selectedCatId || selectedCatId === qa.category.id) &&\n            (!selectedVal || selectedVal === qa.value)));\n        const results = catValQas.filter((qa) => (\n            (!selectedStartDate || qa.airdate >= selectedStartDate) &&\n            (!selectedEndDate || qa.airdate <= selectedEndDate)));\n        const qaItems = results.map((qa) => (\n            <div className=\"questionTile col-lg-3 col-md-6 col-12\"  key={qa.id}>\n                <RenderQAItem qa={qa} />\n            </div>));\n        console.log(\"search render: \", selectedStartDate, selectedEndDate, catValQas.length, results.length);\n        return (\n            <div className=\"questionBoard\">\n                <FilterBar fetchQAs={this.props.appProps.fetchQAs} appProps={qas} minDate={new Date(Math.min(...catValQas.map(qa=>qa.airdate)))} maxDate={new Date(Math.max(...catValQas.map(qa=>qa.airdate)))}/>\n                <div className=\"row\">\n                    {qaItems}\n                </div>\n                <div className=\"row\">\n                    <LoadMore fetchQAs={this.props.appProps.fetchQAs} appProps={qas}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Search;","import React, { useState } from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport Popover, { ArrowContainer } from 'react-tiny-popover';\n\nconst RenderQAItem = ({qa}) => {\n    const [isPopOpen, setPopOpen] = useState(false);\n    return (\n        <Popover isOpen={isPopOpen}\n            onClickOutside={() => { setPopOpen(false); }}\n            content={({ position, targetRect, popoverRect }) => (\n                    <ArrowContainer // if you'd like an arrow, you can import the ArrowContainer!\n                        position={position}\n                        targetRect={targetRect}\n                        popoverRect={popoverRect}\n                        arrowColor={'white'}\n                        arrowSize={10}\n                        arrowStyle={{ opacity: 0.7 }}\n                    >\n                        <dl className='detailPopover row '>\n                            <dt className=\"col-1\">Q:</dt>\n                            <dd className=\"col-10\"><b>{qa.question}</b></dd>\n                            <dt className=\"col-1\">A:</dt>\n                            <dd className=\"col-10\"><b>{qa.answer}</b></dd>\n                        </dl>\n                    </ArrowContainer>\n                )}\n        >\n            <Card className=\"playCard\" onClick={() => { setPopOpen(!isPopOpen); }}>\n                <CardBody className=\"playValue\">${qa.value}</CardBody>\n            </Card>\n        </Popover>\n)};\n\nconst CategoryBar = ({cats}) => cats.map((cat) => (\n    <div className=\"playTile col-2\" key={cat.id}>\n        <Card className=\"playCard\">\n            <CardBody className=\"playCategory\">{cat.title}</CardBody>\n        </Card>\n    </div>\n));\n\nconst Play = ({appProps}) => {\n    if (appProps.cats.isLoading )\n        return(<div className=\"row\"> <Loading msg=\"Categories\"/> </div>);\n\n    if (appProps.catQAs.isLoading )\n        return(<div className=\"row\"> <Loading msg=\"Categories Questions\"/> </div>);\n\n    if (appProps.cats.errMess) {\n        return(\n            <div className=\"row\"> \n                <div className=\"col-12\">\n                    <h4>{appProps.qas.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n\n    const results = [];\n    for(let r = 0; r < 5; r++) \n        for (let c = 0; c < 6; c++) {\n            const catId = appProps.cats.cats[c].id;\n            if (appProps.catQAs) {\n                const qas = appProps.catQAs.catQAs['c'+catId];\n                if (qas && qas[r]) {\n                    const val = (r+1)*200;\n                    let i = 0;\n                    while (i < qas.length && qas[i].value !== val) i++; // find fist match\n                    if (i < qas.length)\n                        results.push(\n                            <div className=\"playTile col-2\" key={'c'+c+'r'+r} >\n                                <RenderQAItem qa={qas[i]}/>\n                            </div>\n                        );\n                }\n            }\n        };\n\n    return (\n        <div className=\"playBoard\">\n            <div className=\"categoryBar row\">\n                <CategoryBar cats={appProps.cats.cats}></CategoryBar>\n            </div>\n            <div className=\"row\">\n                {results}\n            </div>\n        </div>\n    );\n}\n\nexport default Play;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = { isNavOpen: false };\n    }\n\n    toggleNav() { this.setState({ isNavOpen: !this.state.isNavOpen }); }\n\n    render() {\n        return (\n            <Navbar dark expand=\"md\">\n                <NavbarToggler onClick={this.toggleNav} />\n                <NavbarBrand className=\"mr-auto\" href=\"/jeopardy/\"><img className='logo' src='assets/images/logo.png' alt='Jeopardy!'/></NavbarBrand>\n                <Collapse isOpen={this.state.isNavOpen} navbar>\n                    <Nav navbar>\n                        <NavItem>\n                            <NavLink className=\"nav-link\" to='/search'><span className=\"fa fa-search fa-lg\"></span> Search</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"nav-link\" to='/play'><span className=\"fa fa-gamepad fa-lg\"></span> Play</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto\">\n                    <p>Developed by Rachel Lu</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","export const baseUrl = 'http://localhost:3001/';\nexport const serviceUrl = 'https://jservice.io/';\n","import * as ActionTypes from \"./ActionTypes\";\nimport { serviceUrl } from \"../shared/baseUrl\";\nimport { getFormattedDate } from \"../shared/helper\";\n\nexport const fetchQAs = (f) => (dispatch) => {\n    dispatch(qasLoading(true));\n    let url =\n        serviceUrl +\n        \"api/clues?\" +\n        \"offset=\" +\n        ((f && f.offset) || 0) +\n        (f.catId ? \"&category=\" + f.catId : \"\") +\n        (f.value ? \"&value=\" + f.value : \"\") +\n        (f.startDate && f.endDate // work around a bug in jService.io where min/max date is flipped if only 1 of them is specified\n            ? \"&min_date=\" + getFormattedDate(f.startDate) + \"&max_date=\" + getFormattedDate(f.endDate)\n            : (f.startDate ? \"&max_date=\" + getFormattedDate(f.startDate) : \"\") + (f.endDate ? \"&min_date=\" + getFormattedDate(f.endDate) : \"\"));\n    console.log(\"fetchQAs from \", serviceUrl, \":\", url);\n    return fetch(url)\n        .then(\n            (response) => {\n                if (response.ok) {\n                    return response;\n                }\n                var error = new Error(\"Fetching questions error \" + response.status + \": \" + response.statusText);\n                error.response = response;\n                throw error;\n            },\n            (error) => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            }\n        )\n        .then((response) => response.json())\n        .then((qas) => qas.filter((qa) => qa.question !== \"\" && qa.value))\n        .then((qas) => dispatch(addQAs(f, qas)))\n        .catch((error) => dispatch(qasFailed(error.message)));\n};\n\nexport const fetchCats = (n) => (dispatch) => {\n    dispatch(catLoading(true));\n    const offset = Math.random() * 1000;\n    return fetch(serviceUrl + \"api/categories?offset=\" + offset + \"&count=\" + (n ? n : 100))\n        .then(\n            (response) => {\n                if (response.ok) {\n                    return response;\n                }\n                var error = new Error(\"Fetching categories error \" + response.status + \": \" + response.statusText);\n                error.response = response;\n                throw error;\n            },\n            (error) => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            }\n        )\n        .then((response) => response.json())\n        .then((cats) => {\n            const c = cats.sort((a, b) => (a.clues_count < b.clues_count ? 1 : -1)).slice(0, 6); /* choose first 6 */\n            c.map((cat) => dispatch(fetchCatQAs(cat.id))); /* fetch q's for the cats */\n            return dispatch(addCats(c));\n        })\n        .catch((error) => dispatch(qasFailed(error.message)));\n};\n\nexport const fetchCatQAs = (catId) => (dispatch) => {\n    return fetch(serviceUrl + \"api/clues?category=\" + catId)\n        .then(\n            (response) => {\n                if (response.ok) {\n                    return response;\n                }\n                var error = new Error(\"Fetching categories question error \" + response.status + \": \" + response.statusText);\n                error.response = response;\n                throw error;\n            },\n            (error) => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            }\n        )\n        .then((response) => response.json())\n        .then((qas) => dispatch(addCatQAs(catId, qas)))\n        .catch((error) => dispatch(qasFailed(error.message)));\n};\n\nexport const qasLoading = (f) => ({ type: ActionTypes.QAS_LOADING, payload: f });\nexport const qasFailed = (errmess) => ({ type: ActionTypes.QAS_FAILED, payload: errmess });\nexport const addQAs = (f, q) => ({ type: ActionTypes.QAS_ADD, payload: { ...f, qas: q } });\n\nexport const catLoading = (f) => ({ type: ActionTypes.CAT_LOADING, payload: f });\nexport const catFailed = (errmess) => ({ type: ActionTypes.CAT_FAILED, payload: errmess });\nexport const addCats = (cats) => ({ type: ActionTypes.CAT_ADD, payload: cats });\n\nexport const catQAsLoading = (f) => ({ type: ActionTypes.CAT_QAS_LOADING, payload: f });\nexport const catQAsFailed = (errmess) => ({ type: ActionTypes.CAT_QAS_FAILED, payload: errmess });\nexport const addCatQAs = (catId, qas) => ({ type: ActionTypes.CAT_QAS_ADD, catId: catId, payload: qas });\n","export const QAS_LOADING = 'QAS_LOADING';\nexport const QAS_FAILED = 'QAS_FAILED';\nexport const QAS_ADD = 'QAS_ADD';\n\nexport const CAT_LOADING = 'CAT_LOADING';\nexport const CAT_FAILED = 'CAT_FAILED';\nexport const CAT_ADD = 'CAT_ADD';\n\nexport const CAT_QAS_LOADING = 'CAT_QAS_LOADING';\nexport const CAT_QAS_FAILED = 'CAT_QAS_FAILED';\nexport const CAT_QAS_ADD = 'CAT_QAS_ADD';","import React, { Component } from 'react';\nimport Search from './SearchComponent';\nimport Play from './PlayComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchQAs, fetchCats } from '../redux/ActionCreators';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => ({\n  qas: state.qas,\n  cats: state.cats,\n  catQAs: state.catQAs\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchQAs: (f) => dispatch(fetchQAs(f)),\n  fetchCats: () => dispatch(fetchCats())\n});\n\nclass Main extends Component {\n  componentDidMount() {\n    this.props.fetchQAs(0);\n    this.props.fetchCats();\n  }\n\n  render() {\n    console.log('main render: ', this.props.location);\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n            <Switch location={this.props.location}>\n              <Route exact path='/search' render={() => ( <Search appProps={this.props} />)} />\n              <Route exact path='/play' render={() => ( <Play appProps={this.props} />)} /> \n              <Redirect to='/search' />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const QAs = (state = { isLoading: true }, action) => {\n    switch (action.type) {\n        case ActionTypes.QAS_LOADING: \n            return {...state, isLoading: action.payload, errMess: null};\n        case ActionTypes.QAS_FAILED: \n            return {...state, isLoading: false, errMess: action.payload};\n        case ActionTypes.QAS_ADD: \n            const oldQs = action.payload.offset>0 && state.data ? state.data : [];\n            const newQs = action.payload.qas.map((q) => ({...q, airdate: new Date(q.airdate)}));\n            action.payload.qas = null;\n            return {...state, \n                isLoading: false, \n                errMess: null, \n                ...action.payload,\n                data: oldQs.concat(newQs)\n            };\n        default:\n            return state;\n    }\n};\n\nexport const Cats = (state = { isLoading: true, cats:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.CAT_LOADING: \n            return {...state, isLoading: action.payload, errMess: null};\n        case ActionTypes.CAT_FAILED: \n            return {...state, isLoading: false, errMess: action.payload};\n        case ActionTypes.CAT_ADD: \n            return { ...state, isLoading: false, errMess: null, cats: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const CatQAs = (state = { isLoading: true, catQAs:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.CAT_QAS_LOADING: \n            return {...state, isLoading: action.payload, errMess: null};\n        case ActionTypes.CAT_QAS_FAILED: \n            return {...state, isLoading: false, errMess: action.payload};\n        case ActionTypes.CAT_QAS_ADD: \n            const qas = state.catQAs;\n            qas[\"c\"+action.catId] = action.payload\n            .filter((a)=>a.value>0)\n            .sort((a,b)=>(a.value>b.value?1:-1))\n            .map((q) => ({...q, airdate: new Date(q.airdate)}));\n            return {...state, isLoading: false, errMess: null, catQAs: qas};\n        default:\n            return state;\n    }\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { QAs, Cats, CatQAs } from './reducers';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            qas: QAs,\n            cats: Cats,\n            catQAs: CatQAs\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}